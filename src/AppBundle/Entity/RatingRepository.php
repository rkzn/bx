<?php

namespace AppBundle\Entity;

/**
 * RatingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RatingRepository extends \Doctrine\ORM\EntityRepository
{
    public function findRatingByCountry($country, $offset, $limit)
    {
        $sql = <<<sql
SELECT t.ISBN, t.Rating FROM (
	SELECT STRAIGHT_JOIN br.`ISBN`, AVG(br.Rating) Rating, COUNT(br.`ISBN`) Cnt
	FROM `BookRating` br
	JOIN `BookUser` bu ON bu.`UserId` = br.`UserId`
	WHERE 1
	AND bu.`Location` LIKE '%s'
	GROUP BY br.`ISBN`
	HAVING Cnt  > 1
) t ORDER BY Rating DESC, Cnt DESC LIMIT %s, %s;
sql;
        $sql = sprintf($sql, '%'.$country, $offset, $limit);

        $conn = $this->getEntityManager()->getConnection();
        $data = $conn->executeQuery($sql);

        return $data->fetchAll();
    }

    public function findBookRatingByCountry($isbn)
    {
        $sql = <<<sql
SELECT t.ISBN, t.Country, AVG(t.Rating) Rating, COUNT(t.UserId) Users
FROM (
	SELECT STRAIGHT_JOIN br.*, TRIM(SUBSTRING_INDEX(bu.`Location`, ',', -1)) Country
	FROM `BookRating` br
	LEFT JOIN `BookUser` bu ON bu.`UserId` = br.`UserId`
	WHERE 1
	AND br.`ISBN` = '%s'
) t
GROUP BY Country
ORDER BY Rating DESC
sql;
        $sql = sprintf($sql, $isbn);

        $conn = $this->getEntityManager()->getConnection();
        $data = $conn->executeQuery($sql);

        return $data->fetchAll();
    }
}
